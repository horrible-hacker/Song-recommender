# -*- coding: utf-8 -*-
"""Untitled17.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bfmBU-a-P6w7fwiB8Hocngonu1FfDA_p
"""

import pandas as pd
import numpy as np
songs = pd.read_csv("/content/songdata.csv")
print(songs.shape)
songs.head()

songs = songs.sample(n=5000).drop('link', axis=1).reset_index(drop=True)

songs.head()

songs['text'] = songs['text'].str.lower().replace(r'[^\w\s]','').replace(r'\n',' ',regex=True)

import nltk
nltk.download('punkt_tab')
from nltk.stem.porter import PorterStemmer
stemmer = PorterStemmer()

def tokenization(txt):
  tokens = nltk.word_tokenize(txt)
  stemming = [stemmer.stem(w) for w in tokens]

  return " ".join(stemming)

songs['text'] = songs['text'].apply(lambda x: tokenization(x))

songs['text']

from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

tfidf = TfidfVectorizer(stop_words = 'english')
matrix = tfidf.fit_transform(songs['text'])

similarity = cosine_similarity(matrix)

def recommendation(song):
  idx = songs[songs['song'] == song].index[0]
  distance = sorted(list(enumerate(similarity[idx])),reverse=True,key=lambda x:x[1])
  recomended_songs = []
  for i in distance[1:21]:
    recomended_songs.append(songs.iloc[i[0]].song)
  return recomended_songs

recommendation('Now Mary')

import pickle
pickle.dump(songs,open('songs.pkl','wb'))
pickle.dump(similarity,open('similarity.pkl','wb'))